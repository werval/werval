//
// Copyright (c) 2013 the original author or authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

//
// Defaults for QiWeb Runtime Configuration
// See https://github.com/typesafehub/config
//

// == HTTP

qiweb.http: {

    # HTTP Server Listen Address
    address: "127.0.0.1"

    # HTTP Server Listen Port
    port: 23023

    # HTTP Acceptors Threads - Defaulted to Runtime.getRuntime().availableProcessors() * 2
    # acceptors: 4

    # HTTP I/O Threads - Defaulted to Runtime.getRuntime().availableProcessors() * 2
    # iothreads: 4

    # HTTP Executors Threads - Defaulted to Runtime.getRuntime().availableProcessors() * 2
    # executors: 32

    # HTTP Timeouts
    timeout.read: 1 minute
    timeout.write: 30 seconds

    # HTTP Default Chunk Size
    chunksize: 8192

    # HTTP Logging
    log: {
        # Low level HTTP logging
        low-level: {
            enabled: no
            level: trace
        }
    }

    # QueryString multi-valued parameters
    query-string.multi-valued = no

}


// == Filesystem

qiweb.fs: {

    # Temporary directory
    temp: ${user.dir}/qiweb-temp

    # Data directory
    data: ${user.dir}/qiweb-data

    # Log directory
    logs: ${user.dir}/qiweb-logs

}


// == Shutdown

qiweb.shutdown: {

    # Quiet period
    quiet-period: 1 seconds

    # Maximum amount of time to wait until ungraceful shutdown
    timeout: 5 seconds

    # If defined send a Retry-After HTTP headers to 503 Service Unavailable responses.
    # Set to 0 when running in a cluster allowing clients to immediatly reconnect to another node.
    # retry-after: 0 seconds

}


// == Routes

qiweb.routes: {

    # Imported Packages for Parameter types lookup
    imported-packages: [ java.lang, java.math ]

    # Registered ParameterBinders
    parameter-binders: [
        "org.qiweb.runtime.routes.ParameterBindersInstance$String",
        "org.qiweb.runtime.routes.ParameterBindersInstance$Boolean",
        "org.qiweb.runtime.routes.ParameterBindersInstance$Short",
        "org.qiweb.runtime.routes.ParameterBindersInstance$Integer",
        "org.qiweb.runtime.routes.ParameterBindersInstance$Long",
        "org.qiweb.runtime.routes.ParameterBindersInstance$Double",
        "org.qiweb.runtime.routes.ParameterBindersInstance$Float",
        "org.qiweb.runtime.routes.ParameterBindersInstance$BigInteger",
        "org.qiweb.runtime.routes.ParameterBindersInstance$BigDecimal",
        "org.qiweb.runtime.routes.ParameterBindersInstance$UUID",
    ]

}


// == Application

app: {

    # Application Secret Key - Must be set. Otherwise the application won't start
    # secret: MANDATORY_APPLICATION_SECRET

    # FQCN of the Application Global object class
    global: org.qiweb.api.Global

    # Maximum number of errors recorded in Application::errors()
    errors.record.max: 100

    # Session
    session: {
        # Name of the session cookie
        cookie.name: QIWEB_SESSION
        # Path of the session cookie
        cookie.path: /
        # Enable session sharing between subdomains
        # An empty value means using the default specific domain behaviour
        # cookie.domain:
        # Enable the 'Secure' flag on the session cookie for use with HTTPS
        cookie.secure: no
        # Enable the 'HTTP Only' flag on the session cookie, see http://www.owasp.org/index.php/HttpOnly
        cookie.httpOnly: yes
        # Send the session cookie only if session has changed?
        cookie.onlyIfChanged: yes
    }

}
