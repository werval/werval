
dependencies {
    compile libs.slf4j
}


// Generate API for all mimetypes
task updateMimeTypesNames( description: "Generate MimeTypesNames from output of org.qiweb.runtime:updateMimeTypes task" ) << {
    def outFile = new File( project.projectDir, "src/main/java/org/qiweb/api/mime/MimeTypesNames.java" )
    outFile.getParentFile().mkdirs()
    outFile.write( """/*
 * Copyright (c) 2013-2014 the original author or authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.qiweb.api.mime;

/**
 * Generated interface with all MimeTypes defined by Apache.
 */
public interface MimeTypesNames
{""")
    def props = new Properties()
    new File( "${project.projectDir}/../org.qiweb.runtime/src/main/resources/org/qiweb/runtime/mime/mime-types-extensions.properties" ).withInputStream {
        stream -> props.load( stream )
    }
    def seen = []
    props.propertyNames().each() { ext ->
        def name = props.getProperty( ext )
        if( !seen.contains( name ) ) {
            outFile << """
    /**
     * """ + name + """.
     */
    String """ + name.replaceAll( '-', '_' ).replaceAll( '/', '_' ).replaceAll( "\\.", '_' ).replaceAll( "\\+", '_' ).toUpperCase() + """ = \"""" + name + """\";"""
            seen << name
        }
    }
    outFile << "\n}\n"
}
