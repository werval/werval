import org.gradle.api.artifacts.*

buildscript {
    repositories { mavenCentral() }
    dependencies { 
        // JDK8_ASM5 // classpath 'org.ajoberstar:gradle-jacoco:0.3.0'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.6.0'
    }
}

apply from: "$rootProject.projectDir.absolutePath/../gradle/common.gradle"

description = "QiWeb"

apply plugin: 'base' // To add "clean" task to the root project.
apply plugin: 'sonar-runner'

subprojects {
    apply from: rootProject.file( 'common.gradle' )
    apply plugin: 'license'
    license {
        header new File( "$rootProject.projectDir.absolutePath/../config/license/header.txt" )
        strictCheck true
        mapping {
            conf="DOUBLESLASH_STYLE"
        }
        ext.year = Calendar.getInstance().get( Calendar.YEAR )
        ext.name = "the original author or authors"
    }
    // JDK8_ASM5 // apply plugin: 'jacoco'
}

task mergedJavadoc( type: Javadoc, description: 'Creates Javadoc from all the projects.' ) {
    title = 'QiWeb ' + version
    destinationDir = new File( project.buildDir, 'merged-javadoc' )
    // Note: The closures below are executed lazily.
    source {
        subprojects*.sourceSets*.main*.allSource
    }
    classpath.from {
        subprojects*.configurations*.compile*.copyRecursive( { !( it instanceof ProjectDependency ); } )*.resolve()
    }
}

