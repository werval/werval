buildscript {
    repositories {
        mavenLocal();
        mavenCentral();
    }
    dependencies {
        classpath 'de.obqo.gradle:gradle-lesscss-plugin:1.0-1.3.3'
        classpath 'com.eriwen:gradle-js-plugin:1.5.1'
        classpath "org.qiweb:org.qiweb.gradle:0"
    }
}

apply plugin: 'application'
mainClassName = "org.qiweb.runtime.Main"

apply plugin: 'qiweb'
qiweb {
    extraWatch += [ "src/main/assets" ]
}

configurations {
    assets
}

dependencies {

    assets webjars.angular
    assets webjars.bootstrap
    assets webjars.marked

    compile "org.qiweb:org.qiweb.api:$version"
    compile "org.qiweb:org.qiweb.lib:$version"
    compile libs.halbuilder
    compile libs.hibernate_validator
    compile libs.jpa

    runtime "org.qiweb:org.qiweb.runtime:$version"
    runtime libs.eclipselink
    runtime libs.el
    runtime libs.h2
    runtime libs.logback

    testCompile "org.qiweb:org.qiweb.test:$version"
    testCompile libs.fluentlenium
    testCompile libs.rest_assured

}

//  _____             _
// |  _  |___ ___ ___| |_ ___
// |     |_ -|_ -| -_|  _|_ -|
// |__|__|___|___|___|_| |___|
// ____________________________________________________________________________
//

apply plugin: 'lesscss'
apply plugin: 'js'

task extractWebJars( type: Copy ) {
    configurations.assets.files.each {
        from zipTree( it ).matching {
            include 'META-INF/resources/webjars/**'
        }
    }
    eachFile {
        it.path = it.path.replaceAll( 'META-INF/resources/webjars/', '' )
    }
    into 'build/webjars'
}

task concatJs( type: com.eriwen.gradle.js.tasks.CombineJsTask, dependsOn: extractWebJars ) {
    source = [
        'build/webjars/angularjs/1.0.8/angular.js',
        'build/webjars/marked/0.2.9/marked.js',
        'src/main/assets/js/main.js'
    ]
    dest = 'build/assets/js/main.js'
}

//requirejs {
//    options = [
//        //'baseUrl':      'build/assets/js',
//        'name':             'main',
//        'paths.main':       'src/main/assets/js/main',
//        'paths.angular':    'build/webjars/angularjs/1.0.8/angular',
//    ]
//}
//task optimizeJavascript( type: com.eriwen.gradle.js.tasks.RequireJsTask, dependsOn: extractWebJars ) {
//    source = [
//        'build/webjars/angularjs/1.0.8/angular.js',
//        'src/main/assets/js/main.js'
//    ]
//    dest = 'build/assets/js/main.js'
//}
//
//task optimizeJs( type: com.eriwen.gradle.js.tasks.MinifyJsTask, dependsOn: extractWebJars ) {
//    source = [
//        'build/webjars/angularjs/1.0.8/angular.js',
//        'src/main/assets/js/main.js'
//    ]
//    dest = 'build/assets/js/main.js'
//    closure {
//        warningLevel = 'QUIET'
//        // compilationLevel = 'WHITESPACE_ONLY'
//    }
//    inputs.file 'src/main/assets/js/main.js'
//    outputs.file 'build/assets/js/main.js'
//}

task prepareLessFiles( type: Copy, dependsOn: extractWebJars ) {
    from 'build/webjars/bootstrap/3.0.0/less'
    from 'src/main/assets/less/main.less'
    into 'build/less'
}

lesscss {
    source = fileTree( 'build/less' ) {
        include 'main.less'
    }
    dest = 'build/assets/css'
    compress = true
}
task optimizeCss( type: de.obqo.gradle.lesscss.LessTask, dependsOn: prepareLessFiles ) { }

task copyFonts( type: Copy, dependsOn: extractWebJars ) {
    from 'build/webjars/bootstrap/3.0.0/fonts'
    into 'build/generated-src/assets/resources/assets/fonts'
}

task copyAssets( type: Copy, dependsOn: [ concatJs, optimizeCss, copyFonts ] ) {
    from 'build/assets'
    into 'build/generated-src/assets/resources/assets'
}

processResources.dependsOn copyAssets
sourceSets.main.resources.srcDir file( "build/generated-src/assets/resources" )

