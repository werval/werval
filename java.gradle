apply from: "$rootProject.projectDir.absolutePath/../common.gradle"

apply plugin: 'java'
apply plugin: 'maven'

apply from: "$rootProject.projectDir.absolutePath/../repositories.gradle"
apply from: "$rootProject.projectDir.absolutePath/../libraries.gradle"

sourceCompatibility = '1.7'
targetCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// Adding dependencies here will add the dependencies to each subproject.
dependencies {
    runtime libs.logback
    testCompile libs.junit
}

// Create basic folder structure
task createFolders(description: 'Creates the source folders if they do not exist.') doLast {
    sourceSets*.allSource*.srcDirs*.each { File srcDir ->
        if (!srcDir.isDirectory()) {
            println "Creating source folder: ${srcDir}"
            srcDir.mkdirs()
        }
    }
}

// Filter resources
//afterEvaluate {
//    configure( allProcessResourcesTasks() ) {
//        filter( ReplaceTokens, tokens: [
//                'build.version': project.version, 
//                'build.gradleVersion': project.gradle.gradleVersion
//            ] )
//    }
//}
//def allProcessResourcesTasks() {
//    sourceSets.all.processResourcesTaskName.collect {
//        tasks[it]
//    }
//}

// Enable test output
test {
    testLogging {
        showStandardStreams = true
    }   
}

// Create sources JAR
task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// Attach sources JAR
artifacts {
    archives jar 
    archives sourcesJar
}

// POM Setup
configure( install.repositories.mavenInstaller ) {
    pom.groupId = project.group
    pom.artifactId = project.name
    pom.version = project.version
    pom.project {
        description = project.description
        url = "http://qiweb.org"
        inceptionYear '2013'
        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }
        scm {
            url 'https://github.com/qiweb/qiweb'
            connection 'scm:git:https://github.com/qiweb/qiweb.git'
            developerConnection 'scm:git:git@github.com/qiweb/qiweb.git'
        }
        developers {
            developer {
                id = "eskatos"
                name = "Paul Merlin"
                email = "paul@nosphere.org"
                timezone = "CET"
                roles {
                    role 'Core Team'
                }
            }
        }
    }   
}
